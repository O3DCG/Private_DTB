from . import Global
from . import Versions
class FitBone:
    is_first = True
    is_asc = False
    def __init__(self, isfirst):
        self.is_first = isfirst
        self.elxyz = [[], []]
        self.erxyz = [[], []]
        self.is_asc = Global.isAcs()
        self.fitbone()
        self.correct_foot_toe_orientation()

    tbl_fitbone_m = [
        ['lThighBend', 0, 3380, 3380, 165, 165, 1391,1391, 1],
        ['lThighBend', 1, 3337, 3340, 3364, 3327, 3337, 3340, 1],

        ['lThighTwist', 0, 3385, 3138, 4447, 4447, 4447, 4447, 1],
        ['lThighTwist', 1, 3380, 3380, 165,165,3039, 3038,  1],

        ['lShin', 1, 3272, 3888, 3217, 3217, 3272, 3261, 1],  # knee->3217
        ['lShin', 0, 3852, 3852, 4423,4423,4423,4423, 1],

        ['lFoot', 1, 3853, 3855, 3925, 3925, 3853,3853, 1],
        ['lFoot', 0, 6203,6203  , 1382, 1382, 4171, 4171, 1],
        #['lFoot', 0, 4171, 2044, 1382, 1382, 4171, 4171, 1],

        ['lHeel', 1, 3853, 3855, 3925, 3925, 3853,3853, 1],
        ['lHeel', 0, 4465,3869, 4465,3869, 4465,3869, 1],

        ['lMetatarsals', 1, 1708, 1709, 4452,4452, 1708, 1709, 1],
        ['lMetatarsals', 0, 3857, 3857, 1399,1399, 1399,1399, 1],

        ['lToe', 0, 4651, 4651, 4651, 4651, 4651, 4651, 1],
        ['lToe', 1, 6261, 2059, 6261, 2059, 4633, 4633, 1],

        ['lBigToe_2', 1, 4851, 4850, 4851, 4850, 4639, 4639, 1],
        ['lBigToe_2', 0, 4639, 4640, 4639, 4640, 6026,6026, 1],

        ['lSmallToe1_2', 1, 341, 341, 341, 341, 1504,1504, 1],
        ['lSmallToe1_2', 0, 4615, 4615, 4615, 4615, 4615,4562,  1],

        ['lSmallToe2_2', 0, 4617, 4617, 4617, 4617, 4617, 4617, 1],
        ['lSmallToe2_2', 1, 343, 343, 343, 343, 5339,5339, 1],

        ['lSmallToe3_2', 1, 347, 347, 347, 347, 5328,5328, 1],
        ['lSmallToe3_2', 0, 4618, 4618, 4618, 4618, 4618, 4618, 1],

        ['lSmallToe4_2', 1, 364, 364, 364, 364, 4868,4868, 1],
        ['lSmallToe4_2', 0, 4687, 4687, 4687, 4687, 4687, 4687, 1],

        ['lBigToe', 1, 2064, 3832, 2064, 3832,2061,2061, 1],
        ['lBigToe', 0, 4851, 4850, 4851, 4850, 4639, 4639, 1],

        ['lSmallToe1', 1, 2054, 2054, 2054, 2054,1510,1510 ,1],
        ['lSmallToe1', 0, 341, 341, 341, 341,    1504,1504,1],

        ['lSmallToe2', 1, 2053, 2053, 2053, 2053, 1510,1510, 1],
        ['lSmallToe2', 0, 343, 343, 343, 343, 5339,5339, 1],

        ['lSmallToe3', 1, 1401, 1401, 1401, 1401, 1510,1510, 1],
        ['lSmallToe3', 0, 347, 347, 347, 347, 5328,5328, 1],

        ['lSmallToe4', 1, 1405, 1405, 1405, 1405, 1510,1510, 1],
        ['lSmallToe4', 0, 364, 364, 364, 364, 4868,4868, 1],
        #####################################################

        ['lCollar', 1, 2908, 2908, 1450, 1450, 9096, 7975, 0],
        ['lCollar', 0, 2658, 2398, 125, 125, 2658, 2398, 1],

        ['lShldrBend', 1, 4234, 4234, 1445, 2596, 4234, 4234, 1],
        ['lShldrBend', 0, 3554, 3554, 2598, 2598, 3565, 3565, 0],

        ['lShldrTwist', 1, 3554, 3554, 2598, 2598, 3565, 3565, 0],
        ['lShldrTwist', 0, 2868, 2868, 3591, 3591, 3591, 3597, 0],

        ['lForearmBend', 1, 2662, 2868, 3591, 3591, 2662,2868   , 0],
        ['lForearmBend', 0, 1482, 3624, 3629, 3629, 3635,3637, 0],
       
        #3628-->judge from backside
        ['lForearmTwist', 1, 1482, 3624, 2742,3643, 2777, 2846, 0],  # Z->6039--from backside(DOWN)
        ['lForearmTwist', 0, 1896, 1896, 483, 483, 1893, 1893, 0],

        ['lHand', 1, 1893, 1893, 405, 1901, 1478,1896, 1],#1478-->from backside(UP) #1896--from_frontside(DOWN)
        ['lHand', 0, 5980, 5980, 531, 531, 1255, 5973, 1],

        ['lCarpal1', 1, 816, 816,1865,1865,1865,1865, 0],
        ['lCarpal1', 0, 5906, 5906, 5906, 5905, 4062, 525, 0],

        ['lCarpal2', 1, 2857, 2857, 1901,4013,1901,4013, 0],
        ['lCarpal2', 0, 525, 1256, 5938, 5938, 525, 1256, 0],

        ['lCarpal3', 1, 2857, 2857,485,1903,485,1903, 0],
        ['lCarpal3', 0, 5939, 5939, 5939, 5939, 525, 525, 0],

        ['lCarpal4', 1, 2857, 2857, 4030,1905,4030,1905, 0],
        ['lCarpal4', 0, 5239, 5941, 5239, 5941, 4062, 4062, 0],

        ['lIndex2', 1, 998, 983, 5904, 5974, 997, 972, 0],
        ['lIndex2', 0, 963, 963, 981, 981, 4871, 4872, 0],

        ['lMid2', 0, 1037, 1037, 1049, 1049, 1038, 1038, 0],
        ['lMid2', 1, 1057, 1072, 1106, 1069, 1057, 1057, 0],

        ['lRing2',0, 1116, 1111, 1177, 1140, 1111, 1111, 0],
        ['lRing2', 1, 1131, 1131, 1180, 1143, 1131, 1131, 0],

        ['lPinky2',0, 1871, 1214, 1871, 1214, 1185, 1185, 0],
        ['lPinky2', 1, 1193, 1193, 1869, 1217, 1208, 1208, 0],

        ['lMid3', 0, 4766, 4762, 4766, 4762, 4766, 4762, 1],
        ['lIndex3', 0, 4782, 4784, 4782, 4784, 4782, 4784, 1],

        ['lThumb3', 0, 4773, 4769, 4773, 4769, 4773, 4769, 1],
        ['lThumb3', 1, 5996,5996  , 1971,5983, 903,903, 1],

        ['lThumb2', 1, 1964, 1964, 4086, 1962, 922, 1964, 1],

        ['lThumb1', 1, 4046,4046, 1888,1888, 4046,4087, 1],

        ['lRing3', 0, 4752, 4756, 4752, 4756, 4752, 4756, 1],
        ['lPinky3', 0, 4746, 4748, 4746, 4748, 4746, 4748, 1],
        #############################################################
        ['lPectoral', 1, 13715, 13716, 4196, 4197, 13716, 13716, 0],
        ['lPectoral', 0, 14048, 14048, 14048, 14048, 14048, 14048, 1],

        ['hip', 0, 44, 44, 6, 6, 116,116, 1],
        ['hip', 1, 44, 44, 116, 116, 116,116, 1],

        ['pelvis', 0, 47,47, 1751,1751, 3350, 3350, 1],#X3350
        ['pelvis', 1, 3154,3154,3032,3072,3032,3072, 1],

        ['abdomenLower', 1, 45, 3154, 3072, 3076, 45, 3154, 0],
        ['abdomenLower',0, 4345, 4345, 3072, 3076, 4341, 885, 1],

        ['abdomenUpper', 0, 82, 82, 2989, 2989, 82, 82, 0],

        ['chestLower', 1, 82,82, 4199,4199,82,82,1],
        ['chestLower', 0, 58, 58, 13679, 13679, 13679, 13679, 1],

        ['chestUpper', 1, 13986, 13986, 4212, 4216, 13986, 13599, 0],
        ['chestUpper', 0, 58, 58, 4227, 4232, 58, 58, 0],

        ['neckLower', 0, 70, 70, 2158, 2902, 70, 70, 1],
        ['neckLower', 1, 55,74, 2558, 2558, 55,74, 1],

        ['neckUpper', 0, 15, 15, 6217, 6217, 5200, 5200, 1],
        ['neckUpper', 1, 6130, 6130, 2157, 2157, 2158, 2158,1],

        ['head', 1, 19, 19, 6215, 6226, 5200, 5200, 0],
        ['head', 0, 78, 78, 78, 78, 78, 78, 1],

        # >>>>>>>>>>>>>>>
        ['lBrowOuter', 2, 2420, 2420, 2420, 2420, 2413, 2356, 0],
        ['lBrowMiddle', 2, 2170, 2354, 2170, 2354, 2170, 2354, 0],
        ['lBrowMid', 2, 2170, 2354, 2170, 2354, 2170, 2354, 0],
        ['lBrowInner', 2, 2351, 2349, 2347, 2347, 2351, 2225, 0],
        ['CenterBrow', 2, 59, 59, 59, 59, 59, 59, 0],

        ['MidNoseBridge', 2, 4957, 5008, 4960, 4960, 4957, 5008, 0],
        ['Nose', 2, 60, 60, 2179, 2179, 60, 60, 0],

        ['lLipBelowNose', 2, 5122, 5101, 5100, 2306, 5101, 5123, 0],

        ['lNostril', 2, 2179, 2179, 2267, 2267, 3698, 3698, 0],
        ['lNasolabialUpper', 2, 2427,2428,5004,5004,2427,2428,0],  
        ['LipUpperMiddle', 2, 20, 20, 2300, 2300, 20, 20, 0],
        ['LipUpperInner', 2, 5188, 5188, 702, 702, 5188, 5188, 0],
        ['LipUpperOuter', 2, 712, 712, 567, 567, 703, 713, 0],
        ['lNasolabialMiddle', 2, 2308, 2308, 2301, 2301, 2308, 2308, 0],
        ['lCheekUpper', 2, 4998, 4998, 4998, 4998, 4998, 4514, 0],
        ['lSquintInner', 2, 2276, 2276, 2177, 2177, 2276, 2276, 0],
        ['lSquintOuter', 2, 1550, 4513, 4513, 4513, 1550, 4513, 0],
        ['lLipNasolabialCrease', 2, 2305, 2297, 2306, 2306, 2305, 2305, 0],
        #############################################################################
        ['LipLowerMiddle', 3, 14, 14, 744, 565, 14, 13, 0],
        ['lLipLowerInner', 3, 5118, 5118, 743, 746, 2286, 2286, 0],
        ['lLipLowerOuter', 3, 747, 747, 706, 706, 747, 742, 0],
        ['lNasolabialLower',3, 1581, 1581, 1555, 1555, 1581, 1581, 0],
        ['lNasolabialMouthCorner', 3, 2244,2244,2244,758,2244,2244, 0],  
        ['lLipUpperOuter', 3, 703,566,567,567,703,566, 0],  
        ['lLipUpperInner', 3,5118,5118, 567,567, 5118,5118, 0],  
        ['LipBelow', 3, 5110, 5110,5108,5108,5110,5110, 0],  
        ['lLipCorner', 3, 808, 2181, 1582, 1582, 807, 2181, 0],
        ['lCheekLower', 3, 5146, 5142, 5146, 5146, 758, 758, 0],
        ['lJawClench', 3, 2326, 2325, 1552, 1552, 2339, 2339, 0],
        ['LipBelowr', 3, 5110, 5110, 2185, 2185, 5110, 5110, 0],
        ['Chin', 3, 64, 36, 2248, 2248, 64, 36, 0],
        ['BelowJaw', 3, 72, 72, 2374, 5144, 72, 72, 0],
        ################################################################################
        ['tongue01', 1, 5430, 5430, 1595, 1595, 4520, 4520, 0],
        ['tongue01', 0, 5430, 5430, 5147, 5147, 2296, 2296, 0],

        ['tongue02', 1, 5430, 5430, 5147, 5147, 2296, 2296, 0],
        ['tongue02', 0, 5430, 5430, 2296, 4521, 1582, 2293, 0],


        ['tongue03', 1, 5430, 5430, 2296, 4521, 1582, 2293, 0],
        ['tongue03', 0, 5430, 5430, 2293, 2293, 2244, 2295, 0],

        ['tongue04', 1, 5430, 5430, 2293, 2293, 2244, 2295, 0],
        ['tongue04', 0, 5430, 5430, 5104, 5104, 2244, 2295, 0],

        ['lowerTeeth', 1, 5435, 5435, 4521, 4521, 2326, 2326, 0],
        ['lowerTeeth', 0, 5435, 5435, 1595, 1595, 5147, 5147, 0],

        ['lowerJaw', 1, 10, 79, 1566, 1566, 6115, 6115, 0],
        ['lowerJaw', 0, 79, 6163, 1562, 6255, 6255, 6255, 0],

        ['upperTeeth', 1, 5708, 5708, 4515, 4515, 4515, 4516, 0],
        ['upperTeeth', 0, 5708, 5708, 4515, 4515, 4515, 4515, 0],

        ['lEar', 1, 5159,5157, 624, 624,5157,5159, 0],
        ['lEar', 0, 5159,5157, 624,624 , 6154,6154, 0],

        ['lowerFaceRig', 1, 10, 10, 1566, 1566, 6115, 6115, 0],
        ['lowerFaceRig', 0, 10, 10, 2295, 2296, 5144, 5103, 0],

        ['lEye', 0, 15772, 15772,2362,2362, 15772, 15772, 1],
        ['lEye', 1, 15772, 15772, 2416,2423, 15772, 15772, 1],
        # <<<<<<<<<<<<<<<<<<<<<

        ['lEyelidInner', 6, 944, 944, 944, 944, 944, 944, 1],
        ['lEyelidOuter', 6, 585, 585, 585, 585, 585, 585, 1],
        ['lEyelidLower', 6, 936, 941, 936, 941, 936, 941, 1],
        ['lEyelidLowerInner', 6, 936, 936, 936, 936, 936, 936, 1],
        ['lEyelidLowerOuter', 6, 941, 941, 941, 941, 941, 941, 1],
        ['lEyelidUpper', 6, 599, 596, 599, 596, 599, 596, 1],
        ['lEyelidUpperInner', 6, 599, 599, 599, 599, 599, 599, 1],
        ['lEyelidUpperOuter', 6, 596, 596, 596, 596, 596, 596, 1]
    ]
    tbl_fitbone_m_g3 = [
        ['lowerFaceRig', 0, 61, 61, 61, 61, 61, 61, 1],
    ]

    tbl_fitbone_f_g3=[
        ['lowerFaceRig',0 ,61,61,61,61,61,61, 1],
        ['lCarpal1', 1, 3050, 3050, 2029, 2029,3050, 3050, 1],
        ['lCarpal2', 0, 6218,6216, 6241, 6242, 4291, 4291, 1],
    ]
    tbl_fitbone_f = [
        ['hip', 1, 44, 44, 4619,4619, 44,44, 1],
        ['hip', 0, 44, 44, 7, 7 ,44,44, 1], 

        ['pelvis', 0, 48, 48, 3616, 3616, 48, 48, 1],
        ['pelvis', 1, 45, 3355, 3232, 3225, 45, 3355, 1],

        ['abdomenLower', 0, 4625, 4625, 946, 3247, 4625,4625, 1],
        ['abdomenLower', 1, 45, 3355, 3277, 3277, 45, 3355, 1],

        ['abdomenUpper', 0, 90, 90, 2674, 2674, 90, 90, 1],
        ['abdomenUpper', 1,4625, 4625, 4621, 4621, 4625, 4625, 1],

        ['chestLower', 0, 103, 103, 4216, 4216, 103, 103, 1],
        ['chestLower', 1, 93, 90, 2293,2674,2293,2674, 1], 

        ['lPectoral', 1, 4613, 4613, 2740, 2740, 4432, 4432, 0],
        ['lPectoral', 0, 6569, 6569, 6569, 6569, 6569, 6569, 1],

        ['chestUpper', 0, 50, 58, 895, 148, 58, 50, 1],
        #['chestUpper', 1, 84, 84, 3759, 3743, 3743, 1513, 1],
        ['chestUpper', 1, 84, 84, 3759, 3743, 84,85,1],

        ['neckLower', 0, 11, 11, 3095, 2307, 3095, 2307, 1],
        ['neckLower', 1, 56, 56, 2733, 2733, 56, 56, 1],

        ['neckUpper', 0, 16, 16, 6457, 6457, 6457, 6457, 1],
        ['neckUpper', 1, 11, 11, 2709, 2306, 2709, 2306, 1],

        ['head', 1, 16, 16, 6546, 6546, 5504, 5505, 1],
        ['head', 0, 79, 79, 79, 79, 3, 3, 1],
        #####################################################
        ['lThighBend', 0, 1541, 3325, 1444, 1449, 1541, 3325, 1],
        ['lThighBend', 1, 3558, 3558, 3565, 3528, 3565, 3528, 1],

        ['lThighTwist', 0, 3339, 3339, 4727, 4723, 4727, 4727, 1],

        ['lShin', 0, 4079, 4079, 4717, 4150, 4079, 4079, 1],
        ['lShin', 1, 4116, 3473, 3418,3418, 4116, 3473, 1],  # knee -> 3418

        ['lMetatarsals', 1, 4742, 4101, 4742, 4101, 4732, 4732, 1],
        ['lMetatarsals', 0, 309, 309, 1453, 1453, 339, 339, 1],

        ['lFoot', 1, 4078, 4078, 4162, 4162, 3996, 3996, 1],
        ['lFoot', 0, 4081, 4081, 386, 386, 4084, 4084, 1],
        #['lFoot', 0, 385, 385, 386, 386, 4084, 4084, 1],
        #['lFoot', 0, 386, 386, 386, 386, 4084, 4084, 1],

        ['lHeel', 1, 4078, 4078, 4732, 4732, 4732, 4732, 1],
        ['lHeel', 0, 4093, 4093, 1386, 1386, 1386, 1386, 1],

        ['lToe', 1, 2197, 2197, 6594, 2197, 5147, 5147, 0],
        ['lToe', 0, 4900, 4900, 4900, 4900, 4900, 4900, 1],

        ['lBigToe', 0, 5131, 5130, 5131, 5130, 1809, 2208, 1],
        ['lBigToe', 1, 2204, 4057, 2204, 4057, 4058, 4058, 1],

        ['lSmallToe1', 0, 361, 360, 361, 360, 1419, 1419, 1],
        ['lSmallToe1', 1, 1814, 1814, 1814, 1814, 349, 349, 0],

        ['lSmallToe2', 0, 363, 5636, 363, 5636, 5645, 5645, 1],
        ['lSmallToe2', 1, 366, 366, 366, 366, 352, 352, 0],

        ['lSmallToe3', 0, 367, 5626, 367, 5626, 1572, 1572, 1],
        ['lSmallToe3', 1, 371, 368, 371, 368, 356, 356, 1],

        ['lSmallToe4', 0, 384, 5146, 384, 5146, 5148, 5148, 1],
        ['lSmallToe4', 1, 383, 1458, 383, 1458, 2231, 2231, 1],

        ['lSmallToe4_2', 0, 4967, 4967, 4967, 4967, 4967, 4967, 1],

        ['lSmallToe3_2', 0, 4898, 4898, 4898, 4898, 4898, 4898, 1],

        ['lSmallToe2_2', 0, 4897, 4897, 4897, 4897, 4897, 4897, 1],

        ['lSmallToe1_2', 0, 4895, 4895, 4895, 4895, 4895, 4895, 1],

        ['lBigToe_2', 0, 4920, 4919, 4920, 4919, 4920, 4919, 1],
        ################################################################
        ['lCollar', 1, 1902, 871, 1503, 1503, 1902, 871, 1],
        ['lCollar', 0, 2838, 2576, 2754, 2754, 2838, 2576, 1],

        ['lShldrBend', 0, 3755, 3755, 3756, 3763, 3755, 3755, 1],
        ['lShldrBend', 1, 4487, 1497, 1506, 2769, 4487, 1497, 1],

        ['lShldrTwist', 0, 3018, 2850, 3792, 3792, 3018, 3061, 1],

        ['lForearmBend', 0, 3039, 3836, 3871, 2996, 3039, 3836, 1],

        ['lForearmTwist', 0, 2036, 2033, 858, 860,534,2036,1],
        #['lForearmTwist', 0, 2036, 2036, 858, 860  , 2033,3050, 1],

        ['lHand', 1, 2033, 2036, 860, 860, 2033, 2036, 1],
        ['lHand', 0, 1309, 6277, 2021, 2021, 1309, 6277, 1],

        ['lCarpal1', 0, 4291, 4291, 6206, 6206, 4291, 4291, 1],
        ['lCarpal1', 1, 3050,3050, 2029, 2029, 2042, 2042, 1],


        ['lCarpal2', 0, 6241, 6242, 6241, 6242, 4291, 4291, 1],
        ['lCarpal2', 1, 3050, 3050, 523, 8581, 3050, 3050, 1],

        ['lCarpal3', 0, 4291, 4291, 6244, 6243, 4291, 4291, 1],
        ['lCarpal3', 1, 3050, 3050, 522, 571, 3050, 3050, 1],

        ['lCarpal4', 0, 4326, 4326, 6245, 6245, 4292, 4380, 1],
        ['lCarpal4', 1, 3050, 3050, 2045, 2045, 3050, 3050, 1],

        ['lThumb1', 0, 975, 973, 6324, 6318, 975, 973, 1],
        ['lThumb1', 1, 4275, 4275, 2028, 2028, 4275, 4275, 1],#2028
        #['lThumb1', 1, 4275, 4275, 4246, 4246, 4275, 4275, 1],#2028

        ['lThumb2', 0, 955, 954, 490, 487, 955, 954, 1],

        ['lThumb3', 0, 5053, 5049, 5053, 5049, 5053, 5049, 1],

        ['lIndex1', 0, 1036, 1050, 1047, 1084, 1036, 1050, 1],
        ['lMid1', 0, 1125, 1125, 1107, 1144, 1125, 1125, 1],
        ['lRing1', 0, 1199, 1184, 1181, 1218, 1199, 1184, 1],
        ['lPinky1', 0, 1292, 1292, 2013, 1255, 1292, 1292, 1],
        ['lIndex2', 0, 1016, 1016, 5149, 5150, 1016, 1016, 1],
        ['lMid2', 0, 1090, 1090, 5159, 5160, 1090, 1090, 1],
        ['lRing2', 0, 1164, 1164, 5170, 5169, 1164, 1164, 1],
        ['lPinky2', 0, 1243, 1238, 5179, 5180, 1243, 1238, 1],
        ['lIndex3', 0, 5062, 5064, 5062, 5064, 5062, 5064, 1],
        ['lMid3', 0, 5042, 5046, 5042, 5046, 5042, 5046, 1],
        ['lRing3', 0, 5032, 5036, 5032, 5036, 5032, 5036, 1],
        ['lPinky3', 0, 5026, 5028, 5026, 5028, 5026, 5028, 1],
        ###########################################################################
        ['lBrowOuter', 2, 2593, 2593, 2593, 2593, 2593, 2586, 0],
        ['lBrowMiddle', 2, 2503, 2319, 2503, 2319, 2503, 2319, 0],
        ['lBrowMid', 2, 2503, 2319, 2503, 2319, 2503, 2319, 0],
        ['lBrowInner', 2, 2374, 2498, 2374, 2498, 2374, 2498, 0],
        ['CenterBrow', 2, 59, 59, 59, 59, 59, 59, 0],
        ['MidNoseBridge', 2, 5261, 5312, 5264, 5264, 5261, 5312, 0],
        ['Nose', 2, 60, 60, 1707, 1707, 60, 60, 0],
        ['lLipBelowNose', 2, 5427, 5405, 2455, 2455, 5427, 5405, 0],
        ['lNostril', 2, 2328, 5432, 2416, 2416, 2328, 5432, 0],
        ['LipUpperMiddle', 2, 20, 20, 2449, 2449, 20, 20, 0],
        ['LipUpperInner', 2, 5422, 5422, 723, 586, 5422, 5422, 0],
        ['LipUpperOuter', 2, 732, 732, 730, 730, 733, 733, 0],
        ['lNasolabialMiddle', 2, 2452, 2452, 2452, 2452, 2452, 2452, 0],
        ['lNasolabialUpper',2,2600,2601,5315,5315,2600,2601,0],
        ['lCheekUpper', 2, 4794, 5302, 4794, 5302, 4794, 5302, 0],
        ['lSquintInner', 2, 2425, 2425, 2326, 2326, 2425, 2425, 0],
        ['lSquintOuter', 2, 1654, 4793, 1654, 4793, 1654, 4793, 0],
        ['lLipNasolabialCrease', 2, 2446, 2454, 2454, 2454, 2454, 2454, 0],
        #############################################################################
        ['LipLowerMiddle', 3, 14, 14, 585, 585, 14, 14, 0],
        ['lLipLowerInner', 3, 6522, 6512, 767, 767, 6522, 2435, 0],
        ['lLipLowerOuter', 3, 762, 762, 624, 624, 762, 762, 0],
        ['lNasolabialLower',3, 1685, 1685, 1659, 1659, 1685, 1685, 0],
        ['lLipCorner', 3, 2330, 2330, 1686, 1686, 2330, 2330, 0],
        ['lCheekLower', 3, 5450, 5446, 5450, 5450, 4796, 4796, 0],
        ['lJawClench', 3, 2475, 2475, 1656, 1656, 1661, 1661, 0],
        ['LipBelowr', 3, 5414, 5414, 5415, 5415, 5414, 5414, 0],
        ['Chin', 3, 64, 36, 2397, 2397, 64, 36, 0],
        ['BelowJaw', 3, 6458, 6458, 2523, 5448, 6458, 6458, 0],

        ['lNasolabialMouthCorner',3,2398,2393,2393,778,2393,2393,0],
        ['lLipUpperOuter',3,724,586,586,586,724,586,0],
        ['lLipUpperInner',3,5422,5422,586,586,6521,6521,0],
        ['LipBelow',3,5414,5414,5415,5415,5414,5414,9],

        ################################################################################
        ['tongue01', 1, 5733, 5733, 1695, 1699, 1695, 1699, 0],
        ['tongue01', 0, 5733, 5733, 5451, 5451, 4801, 4801, 0],

        ['tongue02', 1, 5733, 5733, 5451, 5451, 4801, 4801, 0],
        ['tongue02', 0, 5733, 5733, 2445, 4801, 2393, 2444, 0],

        ['tongue03', 1, 5733, 5733, 2445, 4801, 2393, 2444, 0],
        ['tongue03', 0, 5733, 5733, 1686, 2442, 1686, 2442, 0],

        ['tongue04', 1, 5733, 5733, 1686, 2442, 1686, 2442, 0],
        ['tongue04', 0, 5733, 5733, 2433, 2433, 1686, 2442, 1],



        ['lowerTeeth', 1, 5739, 5739, 4801, 4801, 4796, 4801, 0],
        ['lowerTeeth', 0, 5739, 5739, 1695, 1699, 1695, 1699, 0],
        ['lowerJaw', 1, 5739, 5739, 1670, 1670, 6443, 6443, 0],
        ['lowerJaw', 0, 5739, 5739, 1666, 1666, 845, 1666, 0],
        ['upperTeeth', 1, 5998, 5998, 4796, 4796, 4796, 4795, 0],
        ['upperTeeth', 0, 5998, 5998, 4795, 4795, 4796, 4795, 0],
        ['lEar', 1, 5461, 5461, 664, 664, 6590, 6590, 0],
        ['lEar', 0, 5461, 5461, 6585, 6585, 6590, 6590, 0],
        ['lowerFaceRig', 0, 22, 22, 778, 778, 2392, 2445, 0],

        ['lEye', 0, 15944, 15944, 6372, 6372, 15944, 15944, 1],
        ['lEye', 1, 15944, 15944, 2509, 6385, 15944, 15944, 1],

        ################################################################################
        ['lEyelidInner', 6, 1693, 1693, 1644, 1644, 1644, 1644, 1],
        ['lEyelidOuter', 6, 2347, 2347, 605, 605, 605, 605, 1],
        ['lEyelidLower', 6, 2357, 2359, 2357, 2359, 2357, 2359, 1],
        ['lEyelidLowerInner', 6, 2357, 2357, 2357, 2357, 2357, 2357, 1],
        ['lEyelidLowerOuter', 6, 2359, 2359, 2359, 2359, 2359, 2359, 1],
        ['lEyelidUpper', 6, 616, 619, 619, 619, 619, 619, 1],
        ['lEyelidUpperInner', 6, 619, 619, 619, 619, 619, 619, 1],
        ['lEyelidUpperOuter', 6, 616, 616, 616, 616, 616, 616, 1],
        ###############################################################################
        ['lBreast', 1, 1895, 1895, 1895, 1895, 4532, 4532, 1],
        ['lBreast', 0, 6569, 6569, 107, 107, 6569, 6569, 1],

        ['lNipple', 0, 6569, 6569, 6569, 6569, 6569, 6569, 1],
        ['lNipple', 1, 6569, 6569, 3913, 3913, 6569, 6569, 1]
    ]

    def connect_when_acs(self):
        key = ['Pinky','Mid','Index','Ring','Thumb']
        for eb in Global.getAmtr().data.edit_bones:
            if eb.name.startswith("l") or eb.name.startswith("r"):
                for k in key:
                    if eb.name[1:].startswith(k) and eb.name[1:] != 'Thumb1':
                        if eb.parent is not None:
                            eb.use_connect = True
                            break

    def vco(self,vidx):
        xidx = Global.toGeniVIndex(vidx)
        max = Global.getMyMax3()[Global.getSubdivLevel()]
        if max <= xidx:
            return Global.getBody().data.vertices[0].co
        v = Global.getBody().data.vertices[xidx]
        return v.co

    def fit_eyectl(self):
        mihon3 = ['MidNoseBridge', 'rEye', 'lEye']
        eyectl = ['mainEye_H','rEye_H','lEye_H']
        for bidx, nbname in enumerate(eyectl):
            nbone = Global.getAmtr().data.edit_bones.get(nbname)
            mihon = Global.getAmtr().data.edit_bones[mihon3[bidx]]
            nbone.use_deform = False
            for i in range(3):
                nbone.head[i] = mihon.head[i]
                nbone.tail[i] = mihon.tail[i]
                if i == 1:
                    nbone.head[i] -= 10
                    nbone.tail[i] -= 10
    eylid_L = [[15944, 15944, 2511, 2509, 15944, 15944], [15772, 15772, 2362, 2360, 15772, 15772]]
    eylid_R = [[16074,16074,9021,9019,16074,16074],[15902,15902,8548,8546,15902,15902]]
    elxyz = [[],[]]
    erxyz = [[],[]]

    def el_xyz(self):
        sx = Global.getSex()
        if self.elxyz[sx]==[]:
            for i in range(3):
                idx = i*2
                self.elxyz[sx].append( (self.vco(self.eylid_L[sx][idx])[i] + self.vco(self.eylid_L[sx][idx+1])[i] )/2)
        return self.elxyz[sx]

    def er_xyz(self):
        sx = Global.getSex()
        if self.erxyz[sx] == []:
            for i in range(3):
                idx = i * 2
                self.erxyz[sx].append((self.vco(self.eylid_R[sx][idx])[i] + self.vco(self.eylid_R[sx][idx + 1])[i]) / 2)
        return self.erxyz[sx]


    def correct_foot_toe_orientation(self):
        foot_toe_names = [['rFoot','lFoot'],['rToe','lToe']]
        foot_toe_yx = [[0.38,0.26],[0.12,0.34]]
        for f_t_idx,foot_toe in enumerate(foot_toe_names):
            for i, ft in enumerate(foot_toe):
                bone = Global.getAmtr().data.edit_bones.get(ft)
                if bone is not None:
                    len = bone.length
                    bone.tail[2] = bone.head[2] - (len *foot_toe_yx[f_t_idx][0])
                    x_sa = len * foot_toe_yx[f_t_idx][1]
                    if i == 0:
                        x_sa = 0 - x_sa
                    bone.tail[0] = bone.head[0] + x_sa


    def fitbone(self):
        Global.deselect()
        Versions.active_object(Global.getAmtr())
        Versions.select(Global.getAmtr(),True)
        Global.setOpsMode("EDIT")
        if Global.isAcs():
            self.connect_when_acs()
        if Global.getIsMan():
            tbl = self.tbl_fitbone_m
            if Global.getIsG3():
                for tb in self.tbl_fitbone_m_g3:
                    tbl.append(tb)
        else:
            tbl = self.tbl_fitbone_f
            if Global.getIsG3():
                for tb in self.tbl_fitbone_f_g3:
                    tbl.append(tb)
        head_len = Global.getAmtr().data.bones.get('head').length
        cuts = ['breast', 'neckUpper', 'head', 'Metatarsals', 'ShldrBend', 'neckLower', 'Toe',
                'Shin', 'Metatarsals', 'foot', 'tongue', 'addomenUpper', 'Hand','chestLower'     ,'foot']
        for eb in Global.getAmtr().data.edit_bones:
            if eb.name[1:].startswith('SmallToe') and len(eb.name)==12 or eb.name[1:] == "BigToe_2":
                eb.use_connect = True
            for c in cuts:
                if (c.lower() in eb.name.lower()):
                    eb.use_connect = False
            for tb in tbl:
                if self.is_first and tb[8]==0 and self.is_asc == False:
                    continue
                eb_name = eb.name
                pod =  eb_name.find(".001")
                if pod>0:
                    eb_name = eb_name[0:pod]
                if tb[0]==eb_name or ('r' + tb[0][1:])==eb_name:
                    bool_ops = ('r' + tb[0][1:])==eb_name
                    xyz = []
                    for i in range(3):
                        idx = i * 2 + 2
                        xyz.append((self.vco(tb[idx])[i] + self.vco(tb[idx + 1])[i]) / 2)
                    if bool_ops:
                        if self.is_first:
                            xyz[0] = 0-xyz[0]
                        else:
                            xyz = []
                            g6 = []
                            for j in range(6):
                                g6.append(Global.get_symmetry(tb[2+j],False))

                            for j in range(3):
                                xyz.append(  (self.vco(g6[j*2])[j]+self.vco(g6[j*2+1])[j])/2 )
                    key = tb[1]
                    if key==1 or key==2 or key==3:
                        for i in range(3):
                            eb.head[i] = xyz[i]
                    if key==3:
                        eb.tail[0] = eb.head[0]
                        eb.tail[1] = eb.head[1]
                        eb.tail[2] = eb.head[2] + (head_len / 7.5)
                    if key==2:
                        eb.tail[0] = eb.head[0]
                        eb.tail[2] = eb.head[2]
                        eb.tail[1] = eb.head[1] + (head_len / 7.5)
                    if key == 0 or key == 6:
                        if eb_name == 'hip':
                            eb.tail[1] = eb.head[1] + head_len * 1.2
                        for i in range(3):
                            eb.tail[i] = xyz[i]
                        if key == 6:
                            if bool_ops:
                                if self.is_first:
                                    eb.head[0] = 0-self.el_xyz()[0]
                                    for i in range(1,3):
                                        eb.head[i] = self.el_xyz()[i]
                                else:
                                    for i in range(3):
                                        eb.head[i] = self.er_xyz()[i]
                            else:
                                for i in range(3):
                                    eb.head[i] = self.el_xyz()[i]
        if self.is_first==False:
            self.fit_eyectl()
        Global.setOpsMode("POSE")
        Global.setOpsMode("EDIT")
        Global.getAmtr().data.edit_bones.get('lowerFaceRig').length += 1
        Global.getAmtr().data.edit_bones.get('lowerFaceRig').length -= 1
        Global.setOpsMode("POSE")




